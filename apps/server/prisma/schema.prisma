datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

model Log {
  id   Int      @id @default(autoincrement())
  type String
  text String
  date DateTime @default(now())
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  firstName    String?
  lastName     String?
  password     String?
  role         Role          @default(USER)
  client       Client?       @relation(fields: [clientId], references: [id])
  clientId     String
  reservations Reservation[]
}

model Client {
  id         String     @id @default(uuid())
  name       String     @unique
  zone       String
  users      User[]
  categories Category[]
}

model Category {
  id            String       @id @default(uuid())
  name          String
  client        Client       @relation(fields: [clientId], references: [id])
  clientId      String
  itemCatalog   CatalogItem? @relation(fields: [itemCatalogId], references: [id])
  itemCatalogId String?
}

model CatalogItem {
  id          String     @id @default(uuid())
  name        String
  description String
  quantity    Int
  clientId    String
  categories  Category[]
  items       Item[]
}

model Item {
  id            String            @id @default(uuid())
  available     Boolean
  name          String
  picture       String?
  status        String
  itemCatalog   CatalogItem       @relation(fields: [itemCatalogId], references: [id])
  itemCatalogId String
  reservations  ReservationItem[]
}

model ReservationItem {
  id            String      @id @default(uuid())
  itemId        String
  reservationId String
  Item          Item        @relation(fields: [itemId], references: [id])
  Reservation   Reservation @relation(fields: [reservationId], references: [id])
}

model Reservation {
  id        String            @id @default(uuid())
  startDate DateTime
  endDate   DateTime
  status    String
  user      User              @relation(fields: [userId], references: [id])
  userId    String
  items     ReservationItem[]
}
